Camera:
- Have a fly mode, which has a position and direction

Lighting:
- Allow additional lights to be added by the user.
  - Predefined locations (as per the camera)
  - Arbitrary locations

Rendering improvements:
- Better display for objects with no materials specified.
- Fix the texturing bugs on the ATI Radeon 4870 X2.
  - I think it's related to texture size - only the FairyForest scene, with
    it's 4000x4000 textures, seems to be affected.
- Get the viewer using vertex and fragment shaders.
- Use VBOs for the geometry data.
- Multiple render passes:
  - Diffuse pass
  - Specular pass
- Calculate normals when the model doesn't provide them itself.
- Bump-mapping
- Transparency
- Shadows
- Atmospheric effects (fog, etc.)
- Get rid of the tearing.

Speed:
- Speed for large(ish) models is poor. Find ways to improve it.
  - Heh, running on an ATI Radeon 4870 X2 does the job - it's super speedy! :-)
- Goal: make it as quick as the OpenCTM viewer (but with texture support)!

UI:
- Widgets to display (and edit?) model attributes.
- Render the axes.
- Render a line grid on y=0 plane.
- Render the bounding box of the object.
- Display object statistics (number of faces/verts/etc., dimensions of bounding
  box, and so on).

Animation:
- Support for keyframed animation (my sample data has keyframes baked out into
  separate .obj files, so that's a good first target).
- Assume that only the vertex coords, texture coords and normals change between
  frames.
- Face data stays the same
- Material data stays the same.

Additional model formats:
- .ply
- .fbx (via the FBX SDK)

