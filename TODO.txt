Bugs:
- Bring back the wireframe rendering mode.

Camera:
- Have a fly mode, which has a position and direction

Lighting:
- Allow additional lights to be added by the user.
  - Predefined locations (as per the camera)
  - Arbitrary locations

Rendering improvements:
- Fix the texturing bugs on the ATI Radeon 4870 X2.
  - I think it's related to texture size - only the FairyForest scene, with
    it's 4000x4000 textures, seems to be affected.
  - Update: looks like a driver bug related to the texture size. Try tiling the
    texture with (say) a 16 pixel overlap between tiles as a way around this
    limitation.
- Get the viewer using vertex and fragment shaders.
- Multipass rendering
- Bump-mapping
- Shadows
- Atmospheric effects (fog, etc.)
- Support for very large textures
  - Clipmapping (aka "Megatexturing").
  - See the 1998 SGI paper linked from http://en.wikipedia.org/wiki/Clipmap
- Get rid of the tearing.
- Different render styles: points, wireframe, solid, textured
  - points & wireframe just toggle on or off independently
  - can draw wireframe on top of solid/textured modes.
  - can draw points on top of wireframe and/or solid/textured modes.

Speed:
- Varies wildly. Find out why.

UI:
- Widgets to display (and edit?) model attributes.
- Render the axes.
- Render a line grid on y=0 plane.
- Render the bounding box of the object.
- Display object statistics (number of faces/verts/etc., dimensions of bounding
  box, and so on) in a HUD.
- Progress bar while loading the model, instead of printf.
- Selection of different item types:
  - faces, vertexes, lines
  - Navigate to the selected face.

Animation:
- Able to load a sequence of .obj files as keyframe data.
- Assume that only the vertex coords, texture coords and normals change between
  frames.
- Face data stays the same
- Material data stays the same.

Input files:
- Add support for some additional model formats:
  - .ply
  - .fbx (via the FBX SDK)
  - .dae (Collada)
  - Something where models include light and camera positions. RIB or PovRay formats, perhaps?
- Factor this out into a separate module.

