Bugs:
- See the issues page on github.

Scene format:
- Create a scene format which allows an arbitrary scene graph.
- To include the following:
  - Lights
  - Cameras
  - Multiple models (i.e. can reference an external model from inside the scene
    graph).
  - Transforms.
- Look into RenderMan or POVRay scene formats.

Camera:
- Have a fly mode, which has a position and direction

Lighting:
- Allow additional lights to be added by the user.
  - Predefined locations (as per the camera)
  - Arbitrary locations

Rendering improvements:
- Multipass rendering & compositing via fragment shader.
- Bump-mapping, on materials that have bump maps.
- Shadows
- Atmospheric effects (fog, etc.)
- Support for very large textures
  - Clipmapping (aka "Megatexturing").
  - See the 1998 SGI paper linked from http://en.wikipedia.org/wiki/Clipmap
- Support for very large models.
  - Try to get the lucy.ply model (~28 million triangles) running at
    interactive speeds.
- Get rid of the tearing.

UI:
- Widgets to display (and edit?) model attributes.
- Render the axes.
- Render a line grid on y=0 plane.
- Render the bounding box of the object.
- Display object statistics (number of faces/verts/etc., dimensions of bounding
  box, and so on) in a HUD.
- Progress bar while loading the model, instead of printf.
- Selection of different item types:
  - faces, vertexes, lines
  - Navigate to the selected face.

Input files:
- Add support for some additional model formats:
  - .fbx (via the FBX SDK)
  - .dae (Collada)
  - Something where models include light and camera positions. RenderMan or PovRay formats, perhaps?
- Factor this out into a separate module.

