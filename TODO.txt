Bugs:
- Segfault when rendering a model with no material
- Bring back the wireframe rendering mode.

Camera:
- Have a fly mode, which has a position and direction

Lighting:
- Allow additional lights to be added by the user.
  - Predefined locations (as per the camera)
  - Arbitrary locations

Rendering improvements:
- Transparency
  - Add alpha channel from the mapD texture to the mapKa, mapKd and mapKs channels?
  - Change the texture combining to use the mapD texture properly?
- Better display for objects with no materials specified.
- Fix the texturing bugs on the ATI Radeon 4870 X2.
  - I think it's related to texture size - only the FairyForest scene, with
    it's 4000x4000 textures, seems to be affected.
- Get the viewer using vertex and fragment shaders.
- DONE! - Use VBOs for the geometry data.
- Multipass rendering
- Calculate normals when the model doesn't provide them itself.
- Bump-mapping
- Shadows
- Atmospheric effects (fog, etc.)
- Get rid of the tearing.

Speed:
- Varies a lot - seems, strangely, to be fill-rate limited.

UI:
- Widgets to display (and edit?) model attributes.
- Render the axes.
- Render a line grid on y=0 plane.
- Render the bounding box of the object.
- Display object statistics (number of faces/verts/etc., dimensions of bounding
  box, and so on).

Animation:
- Able to load a sequence of .obj files as keyframe data.
- Assume that only the vertex coords, texture coords and normals change between
  frames.
- Face data stays the same
- Material data stays the same.

Additional model formats:
- .ply
- .fbx (via the FBX SDK)
- Something where models include light and camera positions. RIB or PovRay formats, perhaps?

